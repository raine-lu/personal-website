{"version":3,"sources":["components/About.js","components/Resume.js","components/Home.js","components/RouterConfig.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["About","Resume","Component","withRouter","Grid","container","spacing","alignItems","justify","direction","style","minHeight","padding","Typography","variant","display","marginTop","RouterConfig","exact","path","component","Home","Contact","Copyright","align","Link","color","href","Date","getFullYear","useStyles","makeStyles","theme","footer","backgroundColor","height","Footer","classes","className","Container","maxWidth","createMuiTheme","overrides","MuiTypography","root","particleParams","particles","number","value","size","interactivity","events","onhover","enable","mode","App","Box","margin","overflowX","params","position","width","top","left","rigt","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAMeA,MAJf,WACE,OAAO,wC,wCCSMC,EAVf,iLAEQ,OACI,8CAHZ,GAA4BC,a,yCCqEbC,mBA1Df,WACE,OACI,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,WAAW,SACXC,QAAQ,SACRC,UAAU,SACVC,MAAO,CAAEC,UAAW,QAASC,QAAS,SAEtC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,UACS,qCAGT,kBAACD,EAAA,EAAD,CACEC,QAAQ,YACRC,QAAQ,QACRL,MAAO,CAAEM,UAAW,QAHtB,4DAME,6BANF,2CAMgD,6BANhD,2CAQE,6BARF,2DASE,6BATF,oDCTOC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWpB,IACtC,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,UAAUC,UAAWnB,IACvC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,WAAWC,UAAWE,Q,wBCP9C,SAASC,IACP,OACE,kBAACV,EAAA,EAAD,CAAYC,QAAQ,QAAQU,MAAM,UAC/B,kBACD,kBAACC,EAAA,EAAD,CAAMC,MAAM,UAAUC,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNjB,UAAW,OACXkB,gBAAiB,UACjBC,OAAQ,WAIG,SAASC,IACtB,IAAMC,EAAUP,IAEhB,OACE,4BAAQQ,UAAWD,EAAQJ,QACzB,kBAACM,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACjB,EAAD,QC1BR,IAAMS,EAAQS,YAAe,CAC3BC,UAAW,CACTC,cAAe,CACbC,KAAM,CACJlB,MAAO,YAoCf,IAAMmB,EAAiB,CACrBC,UAAW,CACTC,OAAQ,CACNC,MAAO,IAETC,KAAM,CACJD,MAAO,IAGXE,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,cAMCC,EAjDf,WACE,OACE,kBAACC,EAAA,EAAD,CACE9C,MAAO,CACLwB,gBAAiB,UACjBtB,QAAS,MACT6C,OAAQ,MACRC,UAAW,WAGb,kBAAC,IAAD,CACEC,OAAQd,EACRnC,MAAO,CACLkD,SAAU,QACVzB,OAAQ,OACR0B,MAAO,OACPC,IAAK,EACLC,KAAM,EACNC,KAAM,KAGV,kBAACC,EAAA,EAAD,CAAejC,MAAOA,GACpB,kBAACkC,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC9B,EAAD,SC7BY+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1c64a834.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About() {\n  return <div>hihihi</div>;\n}\n\nexport default About;\n","import React, { Component } from 'react'\n\nexport class Resume extends Component {\n    render() {\n        return (\n            <div>\n                my resume\n            </div>\n        )\n    }\n}\n\nexport default Resume\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  GridList,\n  GridListTile,\n  ButtonBase,\n} from \"@material-ui/core\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport ResumeIcon from \"@material-ui/icons/Description\";\nimport ContactIcon from \"@material-ui/icons/ContactMail\";\n\nfunction Home() {\n  return (\n      <Grid\n        container\n        spacing={1}\n        alignItems=\"center\"\n        justify=\"center\"\n        direction=\"column\"\n        style={{ minHeight: \"100vh\", padding: \"10px\" }}\n      >\n        <Typography variant=\"h3\">\n          Hi I'm <b>Raine</b>\n        </Typography>\n\n        <Typography\n          variant=\"subtitle2\"\n          display=\"block\"\n          style={{ marginTop: \"1em\" }}\n        >\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n          <br /> Quos blanditiis tenetur unde suscipit, <br />\n          quam beatae rerum inventore consectetur,\n          <br /> neque doloribus, cupiditate numquam dignissimos laborum\n          <br />\n          fugiat deleniti? Eum quasi quidem quibusdam.\n        </Typography>\n       {/*  <GridList\n          cellHeight={\"10em\"}\n          col={3}\n          spacing={2}\n          style={{\n            width: \"27em\",\n            marginTop: \"8em\"\n          }}\n        >\n          <GridListTile style={{ width: \"33.3%\" }}>\n            <ButtonBase component={Link} to={\"/about\"}>\n              <FaceIcon style={{ color: \"#fff\", marginRight: \"8px\" }} />\n              <Typography variant=\"button\">About</Typography>\n            </ButtonBase>\n          </GridListTile>\n          <GridListTile style={{ width: \"33.3%\" }}>\n            <ButtonBase>\n              <ResumeIcon style={{ color: \"#fff\", marginRight: \"8px\" }} />\n              <Typography variant=\"button\">Resume</Typography>\n            </ButtonBase>\n          </GridListTile>\n          <GridListTile style={{ width: \"33.3%\" }}>\n            <ButtonBase>\n              <ContactIcon style={{ color: \"#fff\", marginRight: \"8px\" }} />\n              <Typography variant=\"button\">Contact</Typography>\n            </ButtonBase>\n          </GridListTile>\n        </GridList> */}\n      </Grid>\n  );\n}\n\nexport default withRouter(Home);\n","import React from \"react\";\nimport About from \"./About\";\nimport Resume from \"./Resume\";\nimport Contact from \"./Contact\";\nimport Home from \"./Home\";\nimport {Switch, Route} from 'react-router-dom'\n\nfunction RouterConfig() {\n  return (\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/about' component={About} />\n      <Route exact path='/resume' component={Resume} />\n      <Route exact path='/contact' component={Contact} />\n    </Switch>\n  );\n}\n\nexport default RouterConfig;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    marginTop: \"auto\",\n    backgroundColor: \"#282a36\",\n    height: \"2em\",\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"sm\">\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { Box, createMuiTheme, CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Particles from \"react-particles-js\";\nimport RouterConfig from \"./components/RouterConfig\";\nimport Footer from \"./components/Footer\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTypography: {\n      root: {\n        color: \"#fff\"\n      }\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <Box\n      style={{\n        backgroundColor: \"#282a36\",\n        padding: \"0px\", // remove white space on right hand side\n        margin: \"0px\", // remove white space on right hand side\n        overflowX: \"hidden\" // remove white space on right hand side\n      }}\n    >\n      <Particles\n        params={particleParams}\n        style={{\n          position: \"fixed\",\n          height: \"100%\",\n          width: \"100%\",\n          top: 0,\n          left: 0,\n          rigt: 0\n        }}\n      />\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <RouterConfig />\n        <Footer />\n      </ThemeProvider>\n    </Box>\n  );\n}\n\nconst particleParams = {\n  particles: {\n    number: {\n      value: 50\n    },\n    size: {\n      value: 3\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}